@model NIH_ReSyp.Models.Reservoirsedi1

@{
    ViewBag.Title = "New Zero Elevetion";
}


<div class="col-md-9  offset-2">
    @using (Html.BeginForm("New_Zero_Elevetion", "Reservoirsedi", FormMethod.Post, new { @class = "", id = "sediform", style = "font-color:#000;  font-family: 'Lato' !important;" }))
    {
        @Html.AntiForgeryToken()


        @*<h2 class="text-center" style="font-family:Arial; font-size:30px; font-weight:400; margin-bottom:20px">
            Reservoir Sedimentation
        </h2>*@

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="">
    @Html.LabelFor(model => model.Title_of_problem, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Title_of_problem, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue1", placeholder = "Reservoir Sedimentation Using Empirical Area Reduction Method" } })
    @Html.ValidationMessageFor(model => model.Title_of_problem, "", new { @class = "text-danger" })
</div>
        
<div class="">
    @Html.LabelFor(model => model.Name_of_Reservoir, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Name_of_Reservoir, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue2", placeholder = "Test Reservoir" } })
    @Html.ValidationMessageFor(model => model.Name_of_Reservoir, "", new { @class = "text-danger" })

</div>

<div class="">
    @Html.LabelFor(model => model.Numbersoflevelsineacctbl, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Numbersoflevelsineacctbl, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue3", placeholder = "12", type = "number", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Numbersoflevelsineacctbl, "", new { @class = "text-danger" })

</div>

<div class="">
    @Html.LabelFor(model => model.Reliability1, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.DropDownListFor(model => model.Reliability1, new SelectList(ViewBag.list), htmlAttributes: new { @class = "form-control", id = "sediformvalue4" })
    @*@Html.EditorFor(model => model.Reliability1, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationMessageFor(model => model.Reliability1, "", new { @class = "text-danger" })

</div>

<div class="">
    @Html.LabelFor(model => model.Reliability2, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability2, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue5", placeholder = "1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability2, "", new { @class = "text-danger" })

</div>

<div class="">
    @Html.LabelFor(model => model.Reliability3, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability3, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue6", placeholder = "1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability3, "", new { @class = "text-danger" })
</div>
         

<div class="">
    @Html.LabelFor(model => model.Reliability4, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability4, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue7", placeholder = "1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability4, "", new { @class = "text-danger" })
</div>
        

<div class="">
    @Html.LabelFor(model => model.Reliability5, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability5, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue8", placeholder = "24600", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability5, "", new { @class = "text-danger" })

</div>

<div class="">
    @Html.LabelFor(model => model.Reliability6, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability6, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue9", placeholder = "4150", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability6, "", new { @class = "text-danger" })
</div>
       

<div class="">
    @Html.LabelFor(model => model.Reliability7, htmlAttributes: new { @class = "control-label col-md-5" })
    <br />
    @Html.EditorFor(model => model.Reliability7, new { htmlAttributes = new { @class = "form-control", id = "sediformvalue10", placeholder = "4275", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability7, "", new { @class = "text-danger" })
</div>
         
        <br />
        <div class="col-lg-offset-7">
            <input type="button" id="seditbl" class="btn-NIH_link col-lg-offset-1" value="E-A-C Table" />
            <br />
            <br />
        </div>
        <br />
        <div>
            <input type="button" class="btn-NIH_link col-lg-offset-5" value="Retrieve" />
            <input type="submit" id="sedifrmsave1" class="btn-NIH_link col-lg-offset-1" value="Save" />
            <input type="button" class="btn-NIH_link col-lg-offset-1" value="Clear" id="sedifrmclr1" />
        </div>

    }



    <div>
        <div style="display:none;" id="sedimentTable">

        </div>

        <input type="button" class="btn-NIH_link " value="Back" id="EACTableBack" style="display:none; margin-left:450px;" />
        <input type="submit" value="Submit Values" class="btn-NIH_link" id="EACTablesubmit" style="display:none; margin-right:300px;" />
    </div>
</div>
    <!-- /.container -->
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script>
    $(document).ready(function () {
        $("#seditbl").click(function () {
            NewElevationfunc();
            $("#sedimentTable").show();
            $("#EACTableBack").show();
            $("#EACTablesubmit").show();
            $("#sediform").hide();
        });
        $("#EACTableBack").click(function () {
            $("#sedimentTable").hide();
            $("#sediform").show();
            $("#EACTableBack").hide();
            $("#EACTablesubmit").hide();
        });
        $("#EACTablesubmit").click(function () {
            SubmitNewZero();
            $("#sedimentTable").hide();
            $("#sediform").show();
            $("#EACTableBack").hide();
            $("#EACTablesubmit").hide();
        });
        $("#sedifrmclr1").click(function () {
            $("#sediform")[0].reset();
        });

        function NewElevationfunc() {
            var Obj = {
                Numbersoflevelsineacctbl: parseInt($('#sediformvalue3').val()),
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("GETZeroElevetion", "Reservoirsedi")',
                data: JSON.stringify({ 'reservoirsedi1': Obj }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                console.log(result);
                    var html = '';
                    var htmlNew = '';
                    htmlNew += ' <table class="table col-lg-offset-3" style="text-align:center; width:600px" id="newzerotable">';
                    htmlNew += '<thead class="tableheader" style="text-align: center">';
                    htmlNew += '<tr>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Elevation</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Area</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Capacity</th>';
                    htmlNew += '</tr>';
                    htmlNew += '</thead>';
                    htmlNew += '<tbody class="tbody" style=" color: #000 !important;font-weight: 400 !important;text-align: center">';
                    $.each(result, function (key, item) {
                        htmlNew += '<tr>';
                        htmlNew += '<td style="font-size: 12px" contenteditable="true">' + item.Elevation + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values2" contenteditable="true">' + item.Area + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values" contenteditable="true">' + item.Capacity + '</td>';

                        htmlNew += '</tr>';
                    });
                    htmlNew += '</tbody>';
                    htmlNew += '</table>';

                    $('#sedimentTable').html(htmlNew);

                }
            });
        }

        function SubmitNewZero() {
            var customers = new Array();
            $("#newzerotable TBODY TR").each(function () {
                var row = $(this);
                var customer = {};

                customer.Elevation = parseInt(row.find("TD").eq(0).html());
                customer.Area = parseInt(row.find("TD").eq(1).html());
                customer.Capacity = parseInt(row.find("TD").eq(2).html());


                customers.push(customer);
                //console.log(customers)

                dataToPost = JSON.stringify({ newlisteactbl: customers });

            jQuery.ajax({
            type: "POST",
            url: '@Url.Action("EacTablenew", "Reservoirsedi")',
            traditional: true,
             data: dataToPost,
            contentType: "application/JSON; charset=utf-8",
                dataType: 'JSON',
            cache: false,
                success: function (r) {
                    console.log(r);

            }
            });
            });
        }

    });
    </script>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
