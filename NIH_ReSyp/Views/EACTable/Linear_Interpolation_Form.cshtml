@model NIH_ReSyp.Models.EACTableLinear

@{
    ViewBag.Title = "Linear Interpolation Form";
}

<div class="col-md-9  offset-2">

    @using (Html.BeginForm("Linear_Interpolation_Form", "EACTable", FormMethod.Post, new { @class = "", id = "eacform", style = "font-color:#000;  font-family: 'Lato' !important;" }))
    {
        @Html.AntiForgeryToken()


        @*<h2 class="text-center" style="font-family:Arial; font-size:30px; font-weight:400; margin-bottom:20px">
            EAC Linear Interpolation
        </h2>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="">
    @Html.LabelFor(model => model.Title_of_problem, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Title_of_problem, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue1", placeholder = "Sample Data For E-A-C Interpolation" } })
    @Html.ValidationMessageFor(model => model.Title_of_problem, "", new { @class = "text-danger" })
</div>
      

<div class="">
    @Html.LabelFor(model => model.Name_of_Reservoir, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Name_of_Reservoir, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue2", placeholder = "Test" } })
    @Html.ValidationMessageFor(model => model.Name_of_Reservoir, "", new { @class = "text-danger" })
</div>
         

<div class="">
    @Html.LabelFor(model => model.Numbersofyears, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Numbersofyears, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue3", placeholder = "370", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @*  @Html.ValidationMessageFor(model => model.Numbersofyears, "", new { @class = "text-danger" })*@
</div>
        

<div class="">
    @Html.LabelFor(model => model.Reliability1, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Reliability1, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue4", placeholder = "0.50", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability1, "", new { @class = "text-danger" })
</div>
        

<div class="">
    @Html.LabelFor(model => model.numberofdatapointsineac, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.numberofdatapointsineac, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue5", placeholder = "11", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.numberofdatapointsineac, "", new { @class = "text-danger" })
</div>
       

<div class="">
    @Html.LabelFor(model => model.Reliability3, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Reliability3, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue6", placeholder = "1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability3, "", new { @class = "text-danger" })
</div>
      

<div class="">
    @Html.LabelFor(model => model.Reliability4, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Reliability4, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue7", placeholder = "1000000", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability4, "", new { @class = "text-danger" })
</div>
       

<div class="">
    @Html.LabelFor(model => model.Reliability5, htmlAttributes: new { @class = "lable_froms" })
    <br />
    @Html.EditorFor(model => model.Reliability5, new { htmlAttributes = new { @class = "txtbox_froms", id = "eacfrmvalue8", placeholder = "1000", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
    @Html.ValidationMessageFor(model => model.Reliability5, "", new { @class = "text-danger" })

</div>
         
        <div class="">
            <input type="button" id="eactblshow" class="btn-NIH_link" value="E-A-C Table"  style="margin-left:180px;"/>
           
        </div>
        <div>
            <input type="file" id="fileupload" style="display:none;" />

            <input type="button" onclick="document.getElementById('fileupload').click()" class="btn-NIH_link" value="Retrieve" style="margin-left:140px;" />
            <input type="submit" id="saveeacfrmbtn" class="btn-NIH_link" value="Save" />
            <input type="button" class="btn-NIH_link" value="Clear" id="eacfrmclr1" />
        </div>

    }


    <div>
        <div style="display:none;" id="eaccontbl">

        </div>

        <input type="button" class="btn-NIH_link " value="Back" id="eactablebackbtn" style="display:none; margin-left:250px;" />
        <input type="submit" value="Submit Values" class="btn-NIH_link" id="eactblbtnsbmt" style="display:none; margin-right:000px;" />
    </div>
</div>


<!-- /.container -->
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">

    document.getElementById('fileupload').onchange = function () {

        var file = this.files[0];

        var reader = new FileReader();
        reader.onload = function (progressEvent) {
            // Entire file
            //  console.log(this.result);
            let jsonData = JSON.stringify(this.result);
            //   console.log(jsonData);
            // By lines
            var lines = this.result.replace(/\n/g, " ").split(" ");
            for (var line = 0; line < lines.length; line++) {
                // console.log(lines[line]);

                // console.log(lines.length)

            }

            console.log(lines[0])
            console.log(lines[1])
            console.log(lines[4])
            console.log(lines[6])
            console.log(lines[8])
            console.log(lines[10])
            console.log(lines[12])
            console.log(lines[14])

            document.getElementById("eacfrmvalue1").value = lines[0]
            document.getElementById("eacfrmvalue2").value = lines[1]
            document.getElementById("eacfrmvalue3").value = lines[4]
            document.getElementById("eacfrmvalue4").value = lines[6]
            document.getElementById("eacfrmvalue5").value = lines[8]
            document.getElementById("eacfrmvalue6").value = lines[10]
            document.getElementById("eacfrmvalue7").value = lines[12]
            document.getElementById("eacfrmvalue8").value = lines[14]



        };
        reader.readAsText(file);

    };

</script>
<script>
    $(document).ready(function () {
        $("#eactblshow").click(function () {
            Linearfunc();
            $("#eaccontbl").show();
            $("#eacform").hide();
            $("#eactablebackbtn").show();
            $("#eactblbtnsbmt").show();
        });

        $("#eactablebackbtn").click(function () {
            $("#eaccontbl").hide();
            $("#eacform").show();
            $("#eactablebackbtn").hide();
            $("#eactblbtnsbmt").hide();
        });

        $("#eactblbtnsbmt").click(function () {
            SubmitEACTable();
            $("#eaccontbl").hide();
            $("#eacform").show();
            $("#eactablebackbtn").hide();
            $("#eactblbtnsbmt").hide();

        });

        $("#eacfrmclr1").click(function () {
            $("#eacform")[0].reset();
        });


       function Linearfunc() {
            var Obj = {
                numberofdatapointsineac: parseInt($('#eacfrmvalue5').val()),
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("LinearInterpolationForm", "EACTable")',
                data: JSON.stringify({ 'eactbl1': Obj }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                console.log(result);
                    var html = '';
                    var htmlNew = '';
                    htmlNew += ' <table class="table col-lg-offset-1" style="text-align:center; width:600px" id="EACTable">';
                    htmlNew += '<thead class="tableheader" style="text-align: center">';
                    htmlNew += '<tr>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Elevation</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Area</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Capacity</th>';
                    htmlNew += '</tr>';
                    htmlNew += '</thead>';
                    htmlNew += '<tbody class="tbody" style=" color: #000 !important;font-weight: 400 !important;text-align: center">';
                    $.each(result, function (key, item) {
                        htmlNew += '<tr>';
                        htmlNew += '<td style="font-size: 12px" contenteditable="true">' + item.elevation + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values2" contenteditable="true">' + item.Area + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values" contenteditable="true">' + item.Capacity + '</td>';

                        htmlNew += '</tr>';
                    });
                    htmlNew += '</tbody>';
                    htmlNew += '</table>';

                    $('#eaccontbl').html(htmlNew);

                }
            });
        }

        function SubmitEACTable() {
            var customers = new Array();
            $("#EACTable TBODY TR").each(function () {
                var row = $(this);
                var customer = {};

                customer.elevation = parseInt(row.find("TD").eq(0).html());
                customer.Area = parseInt(row.find("TD").eq(1).html());
                customer.Capacity = parseInt(row.find("TD").eq(2).html());


                customers.push(customer);
                //console.log(customers)

                dataToPost = JSON.stringify({ eactbldatas: customers });

            jQuery.ajax({
            type: "POST",
            url: '@Url.Action("LinearEacTable", "EACTable")',
            traditional: true,
             data: dataToPost,
            contentType: "application/JSON; charset=utf-8",
                dataType: 'JSON',
            cache: false,
                success: function (r) {
                    console.log(r);

            }
            });
            });
        }
    });
</script>



<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
