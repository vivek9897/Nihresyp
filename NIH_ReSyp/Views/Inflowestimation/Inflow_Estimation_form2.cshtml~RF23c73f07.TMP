@model NIH_ReSyp.Models.Inflow2

@{
    ViewBag.Title = "Inflow_Estimation_form2";
}

<div class="col-md-9  offset-2">

    @using (Html.BeginForm("Inflow_Estimation_form2", "Inflowestimation", FormMethod.Post, new { @class = "", id = "inflowestform", style = "font-color:#000;  font-family: 'Lato' !important;" }))
    {
        @Html.AntiForgeryToken()


        <h2 class="text-center" style="font-family:Arial; font-size:30px; font-weight:400;">
            Data Entry For Inflow Estimation Using Rate Of Rise
        </h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title_of_problem, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title_of_problem, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue1", placeholder = "Sample Data For Inflow Estimation" } })
                @Html.ValidationMessageFor(model => model.Title_of_problem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name_of_Reservoir, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Name_of_Reservoir, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue2", placeholder = "Test Reservoir" } })
                @Html.ValidationMessageFor(model => model.Name_of_Reservoir, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numbersofyears, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Numbersofyears, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue3", placeholder = "360.00", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @*@Html.ValidationMessageFor(model => model.Numbersofyears, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliability1, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliability1, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue4", placeholder = "1.00", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliability1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliability2, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliability2, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue5", placeholder = "0.50", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliability2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliability3, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliability3, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue6", placeholder = "0.1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliability3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliability4, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliability4, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue7", placeholder = "0", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliability4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numberofdatapointsintable, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.numberofdatapointsintable, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue8", placeholder = "11", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.numberofdatapointsintable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliability6, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliability6, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue9", placeholder = "1", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliability6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliabili6, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliabili6, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue10", placeholder = "1000000", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliabili6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reliabil, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Reliabil, new { htmlAttributes = new { @class = "form-control", id = "inflw2frmvalue11", placeholder = "10000", type = "decimal", min = "0", max = "100000000", maxlength = "9", oninput = "this.value=this.value.slice(0,this.maxLength||0/0);this.value=(this.value   < 0) ? (0/0) : this.value;" } })
                @Html.ValidationMessageFor(model => model.Reliabil, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="col-lg-offset-7">
            <input type="button" id="inflowestbtn" class="btn-NIH_link  col-lg-offset-1" value="E-A-C Values" />
            <br />
            <br />
        </div>
        <br />
        <!-- Button -->
        <div>
            <input type="button" class="btn-NIH_link col-lg-offset-6" value="Retrieve" />
            <input type="submit" class="btn-NIH_link  col-lg-offset-1" value="Save" id="savebtninf2" />
            <input type="button" class="btn-NIH_link  col-lg-offset-1" value="Clear" id="inflowfrmclr2" />
        </div>

    }


    <div>
        <div style="display:none;" id="inflowestcontbl">

        </div>

        <input type="button" class="btn-NIH_link " value="Back" id="eacsback" style="display:none; margin-left:450px;" />
        <input type="submit" value="Submit Values" class="btn-NIH_link" id="inflowestbtnsbmt" style="display:none; margin-right:300px;" />
    </div>
</div>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script>
    $(document).ready(function () {
        $("#inflowestbtn").click(function () {
            InflowEstimatefunc();
            $("#inflowestcontbl").show();
            $("#inflowestform").hide();
            $("#eacsback").show();
            $("#inflowestbtnsbmt").show();
        })
        $("#eacsback").click(function () {
            $("#inflowestcontbl").hide();
            $("#inflowestform").show();
            $("#eacsback").hide();
            $("#inflowestbtnsbmt").hide();
        });
        $("#inflowestbtnsbmt").click(function () {
            SubmitEACTableest();
            $("#inflowestcontbl").hide();
            $("#inflowestform").show();
            $("#eacsback").hide();
            $("#inflowestbtnsbmt").hide();
        });
        $("#inflowfrmclr2").click(function () {
            $("#inflowestform")[0].reset();
        })

       function InflowEstimatefunc() {
            var Obj = {
                numberofdatapointsintable: parseInt($('#inflw2frmvalue8').val()),
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("InflowEstimationform", "Inflowestimation")',
                data: JSON.stringify({ 'inf2': Obj }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                console.log(result);
                    var html = '';
                    var htmlNew = '';
                    htmlNew += ' <table class="table col-lg-offset-3" style="text-align:center; width:600px" id="tableestiate">';
                    htmlNew += '<thead class="tableheader" style="text-align: center">';
                    htmlNew += '<tr>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Elevation</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Area</th>';
                    htmlNew += ' <th class="col-md-2" style="text-align:center">Capacity</th>';
                    htmlNew += '</tr>';
                    htmlNew += '</thead>';
                    htmlNew += '<tbody class="tbody" style=" color: #000 !important;font-weight: 400 !important;text-align: center">';
                    $.each(result, function (key, item) {
                        htmlNew += '<tr>';
                        htmlNew += '<td style="font-size: 12px" contenteditable="true">' + item.elevation + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values2" contenteditable="true">' + item.area + '</td>';
                        htmlNew += '<td style="font-size: 12px" id="values" contenteditable="true">' + item.capacity + '</td>';

                        htmlNew += '</tr>';
                    });
                    htmlNew += '</tbody>';
                    htmlNew += '</table>';

                    $('#inflowestcontbl').html(htmlNew);

                }
            });
        }
         function SubmitEACTableest() {
            var customers = new Array();
             $("#tableestiate TBODY TR").each(function () {
                var row = $(this);
                var customer = {};

                customer.elevation = parseInt(row.find("TD").eq(0).html());
                customer.area = parseInt(row.find("TD").eq(1).html());
                customer.capacity = parseInt(row.find("TD").eq(2).html());


                customers.push(customer);
                //console.log(customers)

                 dataToPost = JSON.stringify({ eACtablevalues: customers });

            jQuery.ajax({
            type: "POST",
            url: '@Url.Action("InflowEstimationformreturn", "Inflowestimation")',
            traditional: true,
             data: dataToPost,
            contentType: "application/JSON; charset=utf-8",
                dataType: 'JSON',
            cache: false,
                success: function (r) {
                    console.log(r);

            }
            });
            });
        }

    });
    </script>




    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
